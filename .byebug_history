exit
page.has_css?(".new_url")
page.has_css?
page.has_content?
page.has_content
page.body
page.has_form?()
page.body
page.methods
page.
current_path
exit
page.current_path
page.content
page.status_code
page.methods
page.content
page.should have_content("New Url")
page.should have_content("New Url)
page.should have_content
page
controller
exit
session
exit
exitrespond_to
respond_to
response
c
exit
@url.save!
@url
@url.short_url = nil
@url.save!
exit
@url.save!
exit
@url.save!
@url.save
exit
@url.save
exit
@url.save!
@url
@url.shorten!
@url.save!
@url.save
@url
c
url.short_url
url
c
@url
c
exit
c
@url.save
exit
@url.errors.full_messages
@url.save
if @url.save
@url
exit
c
exit
@url.errors.full_messages
c
@url.errors.full_messages
c
exit
@url.errors.full_messages
@url
c
exit
c
@url.errors.full_messages
exit
@url.errors.full_messages
@url.save
@url
url_params
params
exit
c
data
c
data
c
line
exit
Url.last
Url.all
data
n
line
data
n
data
line.gsub(/[(,)]/i, '')
line.gsub(/[(,)]/i, '').chomp
line
